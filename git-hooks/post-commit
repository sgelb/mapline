#!/usr/bin/env bash

# If the package version in package.json changed:
# - generate new prebuilds
# - tag git commit with new package version

# https://coderwall.com/p/mk18zq/automatic-git-version-tagging-for-npm-modules
version=$(git diff HEAD^..HEAD -- package.json | grep '^+\s*\"version\":' | sed -s 's/[^0-9\.]//g')

# .commit is touched in pre-commit. Because we run `git commit --amend` in this
# script, it ensures that this function runs only once and not in an endless loop
if [ -e .commit ]; then
  rm .commit
  if [ "$version" != "" ]; then
    echo "Package version updated"
    cd "$(git rev-parse --show-toplevel)" || exit

    echo ":: Generate prebuilds"
    yarn prebuild
    cd prebuild || exit

    echo ":: Remove not used dependency files"
    rm html2canvas.*.js purify.*.js

    echo ":: Rename files"
    for oldfile in *.*.{js,css,gpx}; do
      newfile=$(sed s'/[0-9a-f]\{8\}.//' <<<"$oldfile")
      # Adapt references inside files
      sed -i "s/$oldfile/$newfile/g" ./*.{js,css,html}
      # Rename files if necessary
      mv "${oldfile}" "${newfile}" 2> /dev/null
    done;

    echo ":: Replace mapbox token with placeholder"
    # Use first token in uncommented line
    token=$(grep -oP '^[^/].*\K".*"' ../src/mapboxtoken.js | head -n 1)
    sed -i "s/$token/\"MAPBOX_TOKEN\"/g" ./mapline.js
    linenumber=$(grep -n MAPBOX_TOKEN ./mapline.js | cut -d : -f 1)

    echo ":: Add current version string to index.html"
    sed -i "s/__VERSION__/$version/g" ./index.html

    echo ":: Update mapbox token info in README.md"
    cat <<- EOF > README.md
		# Prebuild for version [${version}](https://github.com/sgelb/mapline/releases/tag/v${version})

		Find and replace \`MAPBOX_TOKEN\` in \`prebuild/mapline.js\` (Line ${linenumber})
		with your own [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).
		EOF

    echo ":: Add updated prebuild to commit"
    git add ./*
    git commit --amend -C HEAD --no-verify

    echo ":: Create new tag v$version"
    git tag -a -f "v$version" -m "$(git log -1 --format=%s)"
  fi
fi
exit
